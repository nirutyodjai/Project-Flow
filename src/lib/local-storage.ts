/**
 * üöÄ Enhanced Local Storage Service
 * ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏£‡∏á‡∏û‡∏•‡∏±‡∏á - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Firebase!
 */

export class LocalStorageService {
  private static isClient = typeof window !== 'undefined';
  private static listeners: Map<string, Set<(value: any) => void>> = new Map();

  /**
   * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏° Real-time Update
   */
  static setItem<T>(key: string, value: T): boolean {
    if (!this.isClient) return false;
    
    try {
      const serialized = JSON.stringify(value);
      localStorage.setItem(key, serialized);
      
      // ‡πÅ‡∏à‡πâ‡∏á listeners ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      this.notifyListeners(key, value);
      return true;
    } catch (error) {
      console.error('Error saving to localStorage:', error);
      return false;
    }
  }

  /**
   * Subscribe ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
   */
  static subscribe<T>(key: string, callback: (value: T) => void): () => void {
    if (!this.listeners.has(key)) {
      this.listeners.set(key, new Set());
    }
    this.listeners.get(key)!.add(callback);
    
    // ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    const currentValue = this.getItem<T>(key);
    if (currentValue !== null) {
      callback(currentValue);
    }
    
    // Return unsubscribe function
    return () => {
      const listeners = this.listeners.get(key);
      if (listeners) {
        listeners.delete(callback);
      }
    };
  }

  private static notifyListeners(key: string, value: any) {
    const listeners = this.listeners.get(key);
    if (listeners) {
      listeners.forEach(callback => callback(value));
    }
  }

  /**
   * ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
   */
  static getItem<T>(key: string): T | null {
    if (!this.isClient) return null;
    
    try {
      const item = localStorage.getItem(key);
      return item ? JSON.parse(item) : null;
    } catch (error) {
      console.error('Error reading from localStorage:', error);
      return null;
    }
  }

  /**
   * ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
   */
  static removeItem(key: string): boolean {
    if (!this.isClient) return false;
    
    try {
      localStorage.removeItem(key);
      return true;
    } catch (error) {
      console.error('Error removing from localStorage:', error);
      return false;
    }
  }

  /**
   * ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   */
  static clear(): boolean {
    if (!this.isClient) return false;
    
    try {
      localStorage.clear();
      return true;
    } catch (error) {
      console.error('Error clearing localStorage:', error);
      return false;
    }
  }

  /**
   * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ key ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
   */
  static hasItem(key: string): boolean {
    if (!this.isClient) return false;
    return localStorage.getItem(key) !== null;
  }

  /**
   * ‡∏î‡∏∂‡∏á keys ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
   */
  static getAllKeys(): string[] {
    if (!this.isClient) return [];
    
    const keys: string[] = [];
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key) keys.push(key);
    }
    return keys;
  }
}

/**
 * Storage Keys
 */
export const STORAGE_KEYS = {
  PROJECTS: 'projects',
  CONTACTS: 'contacts',
  QUOTATIONS: 'quotations',
  PRICE_LIST: 'priceList',
  UPLOADED_FILES: 'uploadedFiles',
  NOTIFICATIONS: 'notifications',
  USER_PREFERENCES: 'userPreferences',
  PROJECT_ANALYSES: 'projectAnalyses',
  AI_HISTORY: 'aiHistory',
  MARKET_DATA: 'marketData',
  USER_PROFILE: 'userProfile',
  DASHBOARD_WIDGETS: 'dashboardWidgets',
  BOOKMARKS: 'bookmarks',
  RECENT_SEARCHES: 'recentSearches',
} as const;

/**
 * Helper Functions
 */

// Projects
export function saveProjects(projects: any[]) {
  return LocalStorageService.setItem(STORAGE_KEYS.PROJECTS, projects);
}

export function getProjects(): any[] {
  return LocalStorageService.getItem(STORAGE_KEYS.PROJECTS) || [];
}

// Contacts
export function saveContacts(contacts: any[]) {
  return LocalStorageService.setItem(STORAGE_KEYS.CONTACTS, contacts);
}

export function getContacts(): any[] {
  return LocalStorageService.getItem(STORAGE_KEYS.CONTACTS) || [];
}

// Uploaded Files
export function saveUploadedFile(file: { name: string; url: string; size: number; type: string; uploadedAt: string }) {
  const files = LocalStorageService.getItem<any[]>(STORAGE_KEYS.UPLOADED_FILES) || [];
  files.push({ ...file, id: Date.now().toString() });
  return LocalStorageService.setItem(STORAGE_KEYS.UPLOADED_FILES, files);
}

export function getUploadedFiles(): any[] {
  return LocalStorageService.getItem(STORAGE_KEYS.UPLOADED_FILES) || [];
}

// Notifications
export function saveNotification(notification: any) {
  const notifications = LocalStorageService.getItem<any[]>(STORAGE_KEYS.NOTIFICATIONS) || [];
  notifications.unshift({ ...notification, id: Date.now().toString(), timestamp: new Date().toISOString() });
  // ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà 50 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  const limited = notifications.slice(0, 50);
  return LocalStorageService.setItem(STORAGE_KEYS.NOTIFICATIONS, limited);
}

export function getNotifications(): any[] {
  return LocalStorageService.getItem(STORAGE_KEYS.NOTIFICATIONS) || [];
}

export function clearNotifications() {
  return LocalStorageService.setItem(STORAGE_KEYS.NOTIFICATIONS, []);
}

// Initialize default data
export function initializeDefaultData() {
  if (!LocalStorageService.hasItem(STORAGE_KEYS.PROJECTS)) {
    const defaultProjects = [
      {
        id: '1',
        name: '‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô 5 ‡∏ä‡∏±‡πâ‡∏ô',
        organization: '‡∏Å‡∏£‡∏°‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏ß‡∏á',
        type: '‡∏†‡∏≤‡∏Ñ‡∏£‡∏±‡∏ê',
        budget: '50,000,000',
        address: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        contactPerson: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
        phone: '02-123-4567',
        bidSubmissionDeadline: '2025-11-30',
        createdAt: new Date().toISOString(),
      },
      {
        id: '2',
        name: '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
        organization: '‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏à‡∏∏‡∏¨‡∏≤‡∏•‡∏á‡∏Å‡∏£‡∏ì‡πå',
        type: '‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•',
        budget: '15,000,000',
        address: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        contactPerson: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏î‡∏µ‡∏°‡∏≤‡∏Å',
        phone: '02-256-4000',
        bidSubmissionDeadline: '2025-11-15',
        createdAt: new Date().toISOString(),
      },
      {
        id: '3',
        name: '‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        organization: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',
        type: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢',
        budget: '8,000,000',
        address: '‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
        contactPerson: '‡∏ú‡∏®.‡∏î‡∏£.‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå ‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£',
        phone: '02-564-4000',
        bidSubmissionDeadline: '2025-12-01',
        createdAt: new Date().toISOString(),
      },
    ];
    saveProjects(defaultProjects);
  }

  if (!LocalStorageService.hasItem(STORAGE_KEYS.CONTACTS)) {
    const defaultContacts = [
      {
        id: '1',
        type: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ABC ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
        email: 'contact@abc.com',
        phone: '02-111-2222',
        address: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        contactPerson: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
      },
      {
        id: '2',
        type: '‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå',
        name: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó XYZ ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á',
        email: 'sales@xyz.com',
        phone: '02-333-4444',
        address: '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
        contactPerson: '‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á',
      },
    ];
    saveContacts(defaultContacts);
  }
}
